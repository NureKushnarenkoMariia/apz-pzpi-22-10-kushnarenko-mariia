using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


// Стратегія: Інтерфейс для алгоритму сортування
public interface ISortingStrategy
{
    void Sort(int[] array);
}

// Конкретна стратегія: Сортування бульбашкою
public class BubbleSort : ISortingStrategy
{
    public void Sort(int[] array)
    {
        Console.WriteLine("Використано сортування бульбашкою");
        int temp;
        for (int i = 0; i < array.Length - 1; i++)
        {
            for (int j = 0; j < array.Length - 1 - i; j++)
            {
                if (array[j] > array[j + 1])
                {
                    temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }
}

// Конкретна стратегія: Швидке сортування
public class QuickSort : ISortingStrategy
{
    public void Sort(int[] array)
    {
        Console.WriteLine("Використано швидке сортування");
        QuickSortAlgorithm(array, 0, array.Length - 1);
    }

    private void QuickSortAlgorithm(int[] array, int low, int high)
    {
        if (low < high)
        {
            int pivotIndex = Partition(array, low, high);
            QuickSortAlgorithm(array, low, pivotIndex - 1);
            QuickSortAlgorithm(array, pivotIndex + 1, high);
        }
    }

    private int Partition(int[] array, int low, int high)
    {
        int pivot = array[high];
        int i = low - 1;
        for (int j = low; j <= high - 1; j++)
        {
            if (array[j] < pivot)
            {
                i++;
                Swap(ref array[i], ref array[j]);
            }
        }
        Swap(ref array[i + 1], ref array[high]);
        return i + 1;
    }

    private void Swap(ref int a, ref int b)
    {
        int temp = a;
        a = b;
        b = temp;
    }
}

// Клас контексту, який використовує стратегію
public class Sorter
{
    private ISortingStrategy _sortingStrategy;

    public Sorter(ISortingStrategy sortingStrategy)
    {
        _sortingStrategy = sortingStrategy;
    }

    public void SetSortingStrategy(ISortingStrategy sortingStrategy)
    {
        _sortingStrategy = sortingStrategy;
    }

    public void SortArray(int[] array)
    {
        _sortingStrategy.Sort(array);
        Console.WriteLine("Результат сортування: " + string.Join(", ", array));
    }
}

class Program
{
    static void Main()
    {
        // Приклад використання стратегії сортування

        int[] array = { 5, 3, 8, 6, 2, 7 };

        // Спочатку використовуємо BubbleSort
        Sorter sorter = new Sorter(new BubbleSort());
        sorter.SortArray(array);

        // Змінюємо стратегію на QuickSort
        Console.WriteLine();
        sorter.SetSortingStrategy(new QuickSort());
        sorter.SortArray(array);
    }
}
